mean_test_rating <- mean(data_test$rating)
#mean(test) - mean(P)
mean_diff <- mean_test_rating - pred_mean
data_test$pred <- pred_test_rating
data_test$pred_adj <- pred_test_rating + mean_diff
boxplot(data_test$pred_adj ~ data_test$rating)
#calculate RMSE
rmse_adj <- sqrt(mean((data_test$rating - data_test$pred_adj)^2))
cat("The RMSE of the adjusted model is", rmse_adj)
pred_rating
pred_rating <- t(result$q) %*% result$p
##### Postprocessing #####
source("../lib/P3.R")
# Make X
X <- X_mat(q=result$q)
## A1-P3
load(file = "../output/mat_fac.RData")
pred_rating <- t(result$q) %*% result$p
##### Postprocessing #####
source("../lib/P3.R")
# Make X
X <- X_mat(q=result$q)
#SVD with kernel ridge regression
pred_rating <- svd_krr(n=nrow(X), lamb=.5, X, pred_rating)
#define a function to extract the corresponding predictedrating for the test set.
extract_pred_rating <- function(test_set, pred){
pred_rating <- pred[as.character(test_set[2]), as.character(test_set[1])]
return(pred_rating)
}
#extract predicted rating
pred_test_rating <- apply(data_test, 1, extract_pred_rating, pred_rating)
#mean(P)
pred_mean <- mean(pred_test_rating)
#mean(test)
mean_test_rating <- mean(data_test$rating)
#mean(test) - mean(P)
mean_diff <- mean_test_rating - pred_mean
data_test$pred <- pred_test_rating
data_test$pred_adj <- pred_test_rating + mean_diff
boxplot(data_test$pred_adj ~ data_test$rating)
#calculate RMSE
rmse_adj <- sqrt(mean((data_test$rating - data_test$pred_adj)^2))
cat("The RMSE of the adjusted model is", rmse_adj)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv("../data/ml-latest-small/ratings.csv")
set.seed(0)
test_idx <- sample(1:nrow(data), round(nrow(data)/5, 0))
train_idx <- setdiff(1:nrow(data), test_idx)
data_train <- data[train_idx,]
data_test <- data[test_idx,]
U <- length(unique(data$userId))
I <- length(unique(data$movieId))
source("../lib/Matrix_Factorization.R")
source("../lib/cross_validation.R")
f_list <- seq(10, 20, 10)
l_list <- seq(-2, -1, 1)
f_l <- expand.grid(f_list, l_list)
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
result_summary
run_time <- system.time(for(i in 1:nrow(f_l)){
par <- paste("f = ", f_l[i,1], ", lambda = ", 10^f_l[i,2])
cat(par, "\n")
current_result <- cv.function(data, K = 5, f = f_l[i,1], lambda = 10^f_l[i,2])
result_summary[,,i] <- matrix(unlist(current_result), ncol = 10, byrow = T)
print(result_summary)
})
## A1
load("../output/rmse.Rdata")
rmse <- data.frame(rbind(t(result_summary[1,,]), t(result_summary[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
rmse$epoch <- as.numeric(gsub("X", "", rmse$epoch))
rmse %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
rm(list=ls())
data <- read.csv("../data/ml-latest-small/ratings.csv")
set.seed(0)
test_idx <- sample(1:nrow(data), round(nrow(data)/5, 0))
train_idx <- setdiff(1:nrow(data), test_idx)
data_train <- data[train_idx,]
data_test <- data[test_idx,]
U <- length(unique(data$userId))
I <- length(unique(data$movieId))
source("../lib/Matrix_Factorization.R")
source("../lib/cross_validation.R")
f_list <- seq(10, 20, 10)
l_list <- seq(-2, -1, 1)
f_l <- expand.grid(f_list, l_list)
f_list <- seq(10, 20, 10)
l_list <- seq(-2, -1, 1)
f_l <- expand.grid(f_list, l_list)
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
## A2
load(file = "../output/rmse_A2_AB.Rdata")
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
## A1
load("../output/rmse.Rdata")
run_time
result_summary_A1 <- result_summary
rmse <- data.frame(rbind(t(result_summary_A1[1,,]), t(result_summary_A1[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
rmse_A1 <- data.frame(rbind(t(result_summary_A1[1,,]), t(result_summary_A1[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
y
## A2
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
## A1
load("../output/rmse.Rdata")
result_summary_A1 <- result_summary
rmse_A1 <- data.frame(rbind(t(result_summary_A1[1,,]), t(result_summary_A1[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
rmse_A1$epoch <- as.numeric(gsub("X", "", rmse_A1$epoch))
rmse_A1 %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
## A2
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
load(file = "../output/rmse_A2_AB.Rdata")
result_summary_A2 <- result_summary
rmse_A2 <- data.frame(rbind(t(result_summary_A2[1,,]), t(result_summary_A2[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
rmse_A2$epoch <- as.numeric(gsub("X", "", rmse_A2$epoch))
rmse_A2 %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
## A1-P3
load(file = "../output/mat_fac.RData")
rm(result)
## A1-P3
load(file = "../output/mat_fac.RData")
result_A1 <- gradesc(f = 10, lambda = 0.1,lrate = 0.01, max.iter = 100, stopping.deriv = 0.01,
data = data, train = data_train, test = data_test)
library(ggplot2)
RMSE <- data.frame(epochs = seq(10, 100, 10), Training_MSE = result$train_RMSE, Test_MSE = result$test_RMSE) %>% gather(key = train_or_test, value = RMSE, -epochs)
RMSE %>% ggplot(aes(x = epochs, y = RMSE,col = train_or_test)) + geom_point() + scale_x_discrete(limits = seq(10, 100, 10)) + xlim(c(0, 100))
rmse_A2 %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
rmse_A2 %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
## A2
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
load(file = "../output/rmse_A2_AB.Rdata")
source("../lib/Matrix_Factorization_A2.R")
## A2
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
load(file = "../output/rmse_A2.Rdata")
result_summary_A2 <- result_summary
rmse_A2 <- data.frame(rbind(t(result_summary_A2[1,,]), t(result_summary_A2[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
rmse_A2$epoch <- as.numeric(gsub("X", "", rmse_A2$epoch))
rmse_A2 %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
## A2
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
load(file = "../output/rmse_A2.Rdata")
result_summary_A2 <- result_summary
rmse_A2 <- data.frame(rbind(t(result_summary_A2[1,,]), t(result_summary_A2[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
rmse_A2$epoch <- as.numeric(gsub("X", "", rmse_A2$epoch))
rmse_A2 %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
## A1
load("../output/rmse.Rdata")
result_summary_A1 <- result_summary
rmse_A1 <- data.frame(rbind(t(result_summary_A1[1,,]), t(result_summary_A1[2,,])),
train_test = rep(c("Train", "Test"), each = 4),
par = rep(paste("f = ", f_l[,1], ", lambda = ", 10^f_l[,2]), times = 2)) %>%
gather("epoch", "RMSE", -train_test, -par)
rmse_A1$epoch <- as.numeric(gsub("X", "", rmse_A1$epoch))
rmse_A1 %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(lme4)
library(car)
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(caret)
install.packages("caret")
install.packages("caret")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(lme4)
library(MASS)
library(car)
install.packages("car")
library(car)
library(bestNormalize)
install.packages("bestNormalize")
library(bestNormalize)
Dt_YT<-read.csv("C:\\Users\\sungi\\Desktop\\merged_data.csv")
Dt_YT<-read.csv("C:\Users\sungi\Desktop\merged_data.csv")
Dt_YT<-read.csv("C:/Users/sungi/Desktop/merged_data.csv")
Dt_YT<-read.csv("C:\\Users\\sungi\\Desktop\\ADA Project\\merged_data.csv")
qqp(Dt_YT$views_clip, "norm")
qqp(Dt_YT$views_clip, "norm")
bestNormalize(Dt_YT$views_clip)
orderNorm_obj <- orderNorm(Dt_YT$views_clip)
xx <- seq(min(Dt_YT$views_clip), max(Dt_YT$views_clip), length = 100)
truehist(orderNorm_obj$x.t, main = "orderNorm transformation", nbins = 12, col = "gray")
Dt_YT$views_clip_norm<-orderNorm_obj$x.t
lmm <- lmer(views_clip_norm ~ topic + like_ratio_clip +
comment_clip*playlist + comment_clip*sns + comment_clip*like_creator +
comment_clip*reply_creator + comment_viewer*playlist + comment_viewer*sns +
comment_viewer*like_creator + comment_viewer*reply_creator +
(1|Youtuber), data=Dt_YT, REML=FALSE)
summary(lmm)
Anova(lmm)
lmm$residuals
str(lmm)
summary(lmm)
s <-summary(lmm)
s$residuals
plot(s$residuals,
ylab="Residuals",
main="Old Faithful Eruptions")
residuals(lmm)
plot(lmm)
vif(lmm)
plot(lmm)
outlierTest(fit)
outlierTest(lmm)
leveragePlots(lmm)
leveragePlots(lmm)
ncvTest(lmm)
spreadLevelPlot(lmm)
plot(lmm)
crPlots(lmm)
ceresPlots(lmm)
library(gvlma)
install.packages("gvlma")
library(gvlma)
gvmodel <- gvlma(lmm)
ranef(lmm)
plot(resid(lmm),Dt_YT$views_clip_norm)
resid(lmm)
Dt_YT$views_clip_norm
length(Dt_YT$views_clip_norm)
length(resid(lmm))
unique(Dt_YT$Youtuber)
length(unique(Dt_YT$Youtuber))
spreadLevelPlot(lmm)
length(resid(lmm))
length(resid(lmm))-length(unique(Dt_YT$Youtuber))
length(Dt_YT$views_clip_norm)
length(Dt_YT$views_clip_norm)-length(unique(Dt_YT$Youtuber))
length(resid(lmm))
# Homoscedasticity
plot(lmm)
Model_Res_squared <- residuals(lmm)^2
Levene.Model <- lm(Model_Res_squared ~ Dt_YT$Youtuber)
bartlett.test(lmm)
leveneTest(lmm)
# Homoscedasticity
plot(lmm)
plot(Dt_YT$views_clip_norm)
plot(Dt_YT$views_clip)
plot(Dt_YT$views_clip)
plot(Dt_YT$views_clip_norm)
plot(fitted(lmm))
plot(Dt_YT$views_clip_norm)
plot(fitted(lmm))
# linearity
plot(Dt_YT$views_clip_norm)
plot(fitted(lmm))
abline(lmm)
# linearity
plot(Dt_YT$views_clip_norm)
abline(lmm)
abline(lmm)
lmm
# Homoscedasticity
plot(lmm)
mean_res<-mean(residuals(lmm))
res <- residuals(lmm)
mean_res<-mean(res)
st_res <- res-mean_res
std_res <- res/std(st_res)
?sd
res <- rstandard(lmm)
hii <- hatvalues(lmm)
summary(lmm)$sigma
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
rst
plot(rst, fitted(lmm))
plot(sqrt(rst), fitted(lmm))
plot(fitted(lmm),sqrt(rst))
# Homoscedasticity
plot(lmm)
hii <- hatvalues(lmm)
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
plot(fitted(lmm),sqrt(rst))
# Multicollinearity
vif(lmm) #comment_clip / comment_clip:sns
# linearity ok
plot(Dt_YT$views_clip_norm)
abline(lmm)
plot(lmm)
# linearity ok
plot(Dt_YT$views_clip_norm)
plot(lmm)
# Homoscedasticity ok
plot(lmm)
hii <- hatvalues(lmm)
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
plot(fitted(lmm),sqrt(rst))
# Multicollinearity
vif(lmm) #comment_clip / comment_clip:sns
Anova(lmm)
plot(lmm)
hii <- hatvalues(lmm)
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
plot(fitted(lmm),sqrt(rst))
#
plot(lmm)
# residual vs fitted values
plot(lmm)
# sqrt(standardized residual) vs fitted values
hii <- hatvalues(lmm)
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
plot(fitted(lmm),sqrt(rst))
order(fitted(lmm))
order(c(1,1,1))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line)
abline(red_line, col="red")
abline(red_line, col="red", lwd=1.5)
abline(red_line, col="red", lwd=1.5)
abline(red_line, col="red", lwd=2)
# residual vs fitted values
plot(lmm)
plot(fitted(lmm),sqrt(rst))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
plot(Dt_YT$views_clip_norm)
plot(lmm)
plot(Dt_YT$views_clip_norm)
plot(lmm)
plot(Dt_YT$views_clip_norm)
plot(Dt_YT$views_clip_norm)
plot(lmm)
plot(Dt_YT$views_clip_norm)
summary(lmm)
plot(Dt_YT$views_clip_norm)
plot(lmm)
plot(DT_YT$like_ratio_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm)
plot(fitted(lmm), Dt_YT$views_clip_norm)
fitted(lmm)
length(fitted(lmm))
length(Dt_YT$views_clip_norm)
# residual vs fitted values
plot(lmm)
# sqrt(standardized residual) vs fitted values
hii <- hatvalues(lmm)
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
plot(fitted(lmm),sqrt(rst))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm)
head(Dt_YT)
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$comment_viewer, Dt_YT$views_clip_norm)
plot(Dt_YT$playlist, Dt_YT$views_clip_norm)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm)
plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm)
plot(Dt_YT$sns, Dt_YT$views_clip_norm)
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$comment_viewer, Dt_YT$views_clip_norm)
plot(Dt_YT$playlist, Dt_YT$views_clip_norm)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm)
plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm)
plot(Dt_YT$sns, Dt_YT$views_clip_norm)
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm)
plot(Dt_YT$comment_viewer, Dt_YT$views_clip_norm)
plot(Dt_YT$playlist, Dt_YT$views_clip_norm)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm)
plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm)
plot(Dt_YT$sns, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$sns))
abline(lm(Dt_YT$views_clip_norm~Dt_YT$reply_creator))
plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$reply_creator))
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_creator))
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_creator))
plot(Dt_YT$playlist, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$playlist))
plot(Dt_YT$comment_viewer, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_viewer))
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_clip))
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_clip))
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_ratio_clip))
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_ratio_clip), col="red", lwd=1.8)
par(mfrow=c(4,2))
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_ratio_clip), col="red", lwd=1.8)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_clip), col="red", lwd=1.8)
par(mfrow=c(4,2))
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_ratio_clip), col="red", lwd=1.8)
par(mfrow=c(2,4))
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_ratio_clip), col="red", lwd=1.8)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_clip), col="red", lwd=1.8)
plot(Dt_YT$comment_viewer, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_viewer), col="red", lwd=1.8)
plot(Dt_YT$playlist, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$playlist), col="red", lwd=1.8)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_creator), col="red", lwd=1.8)
plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$reply_creator), col="red", lwd=1.8)
plot(Dt_YT$sns, Dt_YT$views_clip_norm)
abline(lm(Dt_YT$views_clip_norm~Dt_YT$sns), col="red", lwd=1.8)
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm, xlab="like_ratio_clip", ylab="views_clip_norm")
par(mfrow=c(2,4))
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm, xlab="like_ratio_clip", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_ratio_clip), col="red", lwd=1.8)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm, xlab="comment_clip", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_clip), col="red", lwd=1.8)
plot(Dt_YT$comment_viewer, Dt_YT$views_clip_norm, xlab="comment_viewer", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_viewer), col="red", lwd=1.8)
plot(Dt_YT$playlist, Dt_YT$views_clip_norm, xlab="playlist", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$playlist), col="red", lwd=1.8)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm, xlab="like_creator", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_creator), col="red", lwd=1.8)
plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm, xlab="reply_creator", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$reply_creator), col="red", lwd=1.8)
plot(Dt_YT$sns, Dt_YT$views_clip_norm, xlab="sns", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$sns), col="red", lwd=1.8)
plot(lmm)
par(mfrow=c(1,1))
par(mfrow=c(2,4))
plot(Dt_YT$like_ratio_clip, Dt_YT$views_clip_norm, xlab="like_ratio_clip", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_ratio_clip), col="red", lwd=1.8)
plot(Dt_YT$comment_clip, Dt_YT$views_clip_norm, xlab="comment_clip", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_clip), col="red", lwd=1.8)
plot(Dt_YT$comment_viewer, Dt_YT$views_clip_norm, xlab="comment_viewer", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_viewer), col="red", lwd=1.8)
plot(Dt_YT$playlist, Dt_YT$views_clip_norm, xlab="playlist", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$playlist), col="red", lwd=1.8)
plot(Dt_YT$like_creator, Dt_YT$views_clip_norm, xlab="like_creator", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_creator), col="red", lwd=1.8)
plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm, xlab="reply_creator", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$reply_creator), col="red", lwd=1.8)
plot(Dt_YT$sns, Dt_YT$views_clip_norm, xlab="sns", ylab="views_clip_norm")
abline(lm(Dt_YT$views_clip_norm~Dt_YT$sns), col="red", lwd=1.8)
plot(lmm)
hii <- hatvalues(lmm)
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
plot(fitted(lmm),sqrt(rst))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
par(mfrow=c(1,1))
hii <- hatvalues(lmm)
rst <- residuals(lmm) / (summary(lmm)$sigma * sqrt(1-hii))
plot(fitted(lmm),sqrt(rst))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
plot(fitted(lmm),sqrt(rst), xlim=c(-2.1,4))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
plot(fitted(lmm),sqrt(rst), xlim=c(-2.5,4))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
plot(fitted(lmm),sqrt(rst), xlim=c(-2.5,3.5))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
plot(fitted(lmm),sqrt(rst))
plot(fitted(lmm),sqrt(rst), xlim=c(-2.5,3.5))
plot(fitted(lmm),sqrt(rst), xlim=c(min(fitted(lmm))-0.5, max(fitted(lmm)+.5))
plot(fitted(lmm),sqrt(rst), xlim=c(min(fitted(lmm))-0.5, max(fitted(lmm)+.5)))
plot(fitted(lmm),sqrt(rst), xlim=c(min(fitted(lmm))-0.5, max(fitted(lmm))+.5))
plot(fitted(lmm),sqrt(rst))
red_line <- lm(sqrt(rst)~fitted(lmm))
abline(red_line, col="red", lwd=2)
# abline(lm(Dt_YT$views_clip_norm~Dt_YT$comment_viewer), col="red", lwd=1.8)
# plot(Dt_YT$playlist, Dt_YT$views_clip_norm, xlab="playlist", ylab="views_clip_norm")
# abline(lm(Dt_YT$views_clip_norm~Dt_YT$playlist), col="red", lwd=1.8)
# plot(Dt_YT$like_creator, Dt_YT$views_clip_norm, xlab="like_creator", ylab="views_clip_norm")
# abline(lm(Dt_YT$views_clip_norm~Dt_YT$like_creator), col="red", lwd=1.8)
# plot(Dt_YT$reply_creator, Dt_YT$views_clip_norm, xlab="reply_creator", ylab="views_clip_norm")
# abline(lm(Dt_YT$views_clip_norm~Dt_YT$reply_creator), col="red", lwd=1.8)
# plot(Dt_YT$sns, Dt_YT$views_clip_norm, xlab="sns", ylab="views_clip_norm")
# abline(lm(Dt_YT$views_clip_norm~Dt_YT$sns), col="red", lwd=1.8)
# par(mfrow=c(1,1))
plot(lmm)
# Multicollinearity
vif(lmm) #comment_clip / comment_clip:sns
View(rmse)
